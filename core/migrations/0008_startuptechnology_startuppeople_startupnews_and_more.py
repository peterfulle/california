# Generated by Django 4.2.20 on 2025-08-27 06:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0007_userprofile_startup"),
    ]

    operations = [
        migrations.CreateModel(
            name="StartupTechnology",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "technology_stack",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Stack completo de tecnologías",
                    ),
                ),
                ("architecture_overview", models.TextField(blank=True)),
                ("infrastructure_details", models.TextField(blank=True)),
                (
                    "product_roadmap",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Roadmap detallado del producto",
                    ),
                ),
                ("feature_specifications", models.JSONField(blank=True, default=list)),
                ("technical_milestones", models.JSONField(blank=True, default=list)),
                (
                    "performance_metrics",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Métricas de performance del producto",
                    ),
                ),
                (
                    "uptime_statistics",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=5, null=True
                    ),
                ),
                ("security_measures", models.TextField(blank=True)),
                ("patents_filed", models.JSONField(blank=True, default=list)),
                ("trademarks", models.JSONField(blank=True, default=list)),
                ("trade_secrets", models.TextField(blank=True)),
                ("scalability_plan", models.TextField(blank=True)),
                ("technical_debt_assessment", models.TextField(blank=True)),
                ("development_methodology", models.TextField(blank=True)),
                ("compliance_standards", models.JSONField(blank=True, default=list)),
                ("data_privacy_measures", models.TextField(blank=True)),
                ("regulatory_considerations", models.TextField(blank=True)),
                ("api_documentation_url", models.URLField(blank=True)),
                ("technical_architecture_url", models.URLField(blank=True)),
                ("code_quality_reports_url", models.URLField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "startup",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="private_technology",
                        to="core.startup",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StartupPeople",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "founders_detailed_bios",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Biografías detalladas de fundadores",
                    ),
                ),
                (
                    "equity_distribution",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Distribución de equity del equipo",
                    ),
                ),
                ("company_values", models.TextField(blank=True)),
                ("remote_work_policy", models.TextField(blank=True)),
                ("compensation_philosophy", models.TextField(blank=True)),
                ("diversity_initiatives", models.TextField(blank=True)),
                (
                    "hiring_plan_12m",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Plan de contrataciones a 12 meses",
                    ),
                ),
                ("key_roles_needed", models.TextField(blank=True)),
                ("org_chart_url", models.URLField(blank=True)),
                (
                    "advisory_board",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Lista de advisors con detalles",
                    ),
                ),
                ("board_composition", models.JSONField(blank=True, default=dict)),
                ("employee_benefits", models.JSONField(blank=True, default=dict)),
                ("company_culture_deck_url", models.URLField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "startup",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="private_people",
                        to="core.startup",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StartupNews",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "monthly_updates",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Updates mensuales para inversionistas",
                    ),
                ),
                ("milestone_achievements", models.JSONField(blank=True, default=list)),
                ("upcoming_milestones", models.JSONField(blank=True, default=list)),
                ("competitive_analysis", models.TextField(blank=True)),
                ("market_developments", models.TextField(blank=True)),
                ("partnership_opportunities", models.TextField(blank=True)),
                (
                    "media_coverage",
                    models.JSONField(
                        blank=True, default=list, help_text="Cobertura de medios"
                    ),
                ),
                ("press_releases", models.JSONField(blank=True, default=list)),
                ("upcoming_events", models.JSONField(blank=True, default=list)),
                ("investor_letter_template", models.TextField(blank=True)),
                ("quarterly_reports", models.JSONField(blank=True, default=list)),
                ("customer_testimonials", models.JSONField(blank=True, default=list)),
                ("case_studies", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "startup",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="private_news",
                        to="core.startup",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StartupFinancials",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "arr_current",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Annual Recurring Revenue actual",
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    "mrr_growth_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Tasa de crecimiento MRR (porcentaje)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "revenue_forecast_12m",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "revenue_forecast_24m",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "cac_payback_period",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Meses para recuperar CAC",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "gross_margin",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Margen bruto (porcentaje)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "net_revenue_retention",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "cash_position",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Efectivo actual en banco",
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    "burn_rate_detailed",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Burn rate mensual detallado",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "runway_calculation",
                    models.TextField(
                        blank=True, help_text="Cálculo detallado del runway"
                    ),
                ),
                (
                    "funding_use_breakdown",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Desglose de uso de fondos por categoría",
                    ),
                ),
                (
                    "financial_projections",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Proyecciones financieras detalladas",
                    ),
                ),
                ("current_round_details", models.TextField(blank=True)),
                (
                    "previous_investors",
                    models.TextField(
                        blank=True, help_text="Lista de inversionistas previos"
                    ),
                ),
                ("terms_and_conditions", models.TextField(blank=True)),
                ("financial_statements_url", models.URLField(blank=True)),
                ("cap_table_url", models.URLField(blank=True)),
                ("business_plan_url", models.URLField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "startup",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="private_financials",
                        to="core.startup",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PrivateDataAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "section_accessed",
                    models.CharField(
                        choices=[
                            ("financials", "Financials"),
                            ("people", "People"),
                            ("news", "News"),
                            ("technology", "Technology"),
                        ],
                        max_length=50,
                    ),
                ),
                ("accessed_at", models.DateTimeField(auto_now_add=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "investor",
                    models.ForeignKey(
                        limit_choices_to={"user_type": "investor"},
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.userprofile",
                    ),
                ),
                (
                    "startup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.startup"
                    ),
                ),
            ],
            options={
                "ordering": ["-accessed_at"],
            },
        ),
        migrations.CreateModel(
            name="InvestorAccessRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("revoked", "Access Revoked"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        help_text="Mensaje del inversionista explicando su interés",
                        max_length=1000,
                    ),
                ),
                (
                    "review_message",
                    models.TextField(blank=True, help_text="Respuesta del fundador"),
                ),
                ("requested_at", models.DateTimeField(auto_now_add=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Fecha de expiración del acceso",
                        null=True,
                    ),
                ),
                (
                    "investor",
                    models.ForeignKey(
                        limit_choices_to={"user_type": "investor"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="access_requests",
                        to="core.userprofile",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_requests",
                        to="core.userprofile",
                    ),
                ),
                (
                    "startup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="access_requests",
                        to="core.startup",
                    ),
                ),
            ],
            options={
                "ordering": ["-requested_at"],
                "unique_together": {("investor", "startup")},
            },
        ),
    ]
